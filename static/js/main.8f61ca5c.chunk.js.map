{"version":3,"sources":["components/Form.js","components/TodoItem.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","textInputHandler","e","setInputText","target","value","submitTodoHandler","preventDefault","todos","setTodos","inputText","text","isCompleted","id","Math","round","random","statusHandler","setStatus","bind","className","onChange","this","type","onClick","name","Component","TodoItem","deleteHandler","todosRemain","filter","el","todo","completeHandler","map","TodoList","filterTodos","App","useState","status","setFilterTodos","useEffect","getLocalTodos","filterHandler","saveToLocal","localStorage","setItem","JSON","stringify","getItem","parse","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f61ca5c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.textInputHandler.bind(this);\r\n  }\r\n  textInputHandler = (e) => {\r\n    this.props.setInputText(e.target.value);\r\n  };\r\n\r\n  submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    const todos = this.props.todos;\r\n    const setTodos = this.props.setTodos;\r\n    const inputText = this.props.inputText;\r\n    const setInputText = this.props.setInputText;\r\n    setTodos([\r\n      ...todos,\r\n      {\r\n        text: inputText,\r\n        isCompleted: false,\r\n        id: Math.round(Math.random() * 1000),\r\n      },\r\n    ]);\r\n    setInputText(\"\");\r\n  };\r\n\r\n  statusHandler = (e) => {\r\n    this.props.setStatus(e.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form\">\r\n        <div className=\"add\">\r\n          <input\r\n            onChange={this.textInputHandler}\r\n            value={this.props.inputText}\r\n            type=\"text\"\r\n            className=\"form-input\"\r\n          />\r\n          <button className=\"form-btn\" onClick={this.submitTodoHandler}>\r\n            <i className=\"fas fa-plus\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"select\">\r\n          <select\r\n            onChange={this.statusHandler}\r\n            name=\"todos\"\r\n            className=\"filter-todo\"\r\n          >\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from \"react\";\r\nclass TodoItem extends Component {\r\n  deleteHandler = () => {\r\n    const todosRemain = this.props.todos.filter((el) => {\r\n      return el.id !== this.props.todo.id;\r\n    });\r\n    this.props.setTodos(todosRemain);\r\n  };\r\n\r\n  completeHandler = () => {\r\n    this.props.setTodos(\r\n      this.props.todos.map((el) => {\r\n        if (el.id === this.props.todo.id) {\r\n          return {\r\n            ...el,\r\n            isCompleted: !el.isCompleted,\r\n          };\r\n        }\r\n        return el;\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <li\r\n        className={`todo-item ${\r\n          this.props.todo.isCompleted ? \"completed\" : \"\"\r\n        }`}\r\n      >\r\n        <span className=\"todo-title\">{this.props.todo.text}</span>\r\n        <button onClick={this.completeHandler} className=\"btn btn-complete\">\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n        <button onClick={this.deleteHandler} className=\"btn btn-delete\">\r\n          <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass TodoList extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"todo-container\">\r\n        <ul className=\"todo-list\">\r\n          {this.props.filterTodos.map((todo) => {\r\n            return (\r\n              <TodoItem\r\n                todos={this.props.todos}\r\n                setTodos={this.props.setTodos}\r\n                key={todo.id}\r\n                todo={todo}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TodoList;\r\n","import \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  //state\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filterTodos, setFilterTodos] = useState([]);\n\n  //effect\n  //Run once when react render the first time\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveToLocal();\n  }, [todos, status]);\n\n  const saveToLocal = () => {\n    localStorage.setItem(\"todo_list\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todo_list\") === null) {\n      localStorage.setItem(\"todo_list\", JSON.stringify([]));\n    } else {\n      setTodos(JSON.parse(localStorage.getItem(\"todo_list\")));\n    }\n  };\n\n  const filterHandler = () => {\n    console.log(\"filter handler was called\");\n    switch (status) {\n      case \"completed\":\n        setFilterTodos(todos.filter((todo) => todo.isCompleted === true));\n        break;\n      case \"uncompleted\":\n        setFilterTodos(todos.filter((todo) => todo.isCompleted === false));\n        break;\n      default:\n        setFilterTodos(todos);\n        break;\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h1>Albert's Todo List</h1>\n      </header>\n      {/* Can not pass setState() directly to props*/}\n      {/* Pass through a function (setInputText) to handle setState */}\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList todos={todos} setTodos={setTodos} filterTodos={filterTodos} />\n    </div>\n  );\n}\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     = {\n//       inputText: \"\",\n//       todos: [],\n//       status: \"all\",\n//       filterTodos: [],\n//     };\n//   }\n\n//   setInputText = (inputText) => {\n//     setState({ inputText: inputText });\n//   };\n\n//   setTodos = (todos) => {\n//     setState({ todos: todos });\n//   };\n\n//   setStatus = (status) => {\n//     setState({ status: status });\n//   };\n\n//   setFilterTodos = (filterTodos) => {\n//     setState({ filterTodos: filterTodos });\n//   };\n\n//   filterHandler = () => {\n//     switch (status) {\n//       case \"completed\":\n//         setFilterTodos(\n//           status.filter((todo) => todo.isCompleted === true)\n//         );\n//         break;\n//       case \"uncompleted\":\n//         setFilterTodos(\n//           status.filter((todo) => todo.isCompleted === false)\n//         );\n//         break;\n//       default:\n//         setFilterTodos(todos);\n//         break;\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <header className=\"header\">\n//           <h1>Albert's Todo List</h1>\n//         </header>\n//         {/* Can not pass setState() directly to props*/}\n//         {/* Pass through a function (setInputText) to handle setState */}\n//         <Form\n//           todos={todos}\n//           setTodos={setTodos}\n//           inputText={inputText}\n//           setInputText={setInputText}\n//           setStatus={setStatus}\n//         />\n//         <TodoList todos={todos} setTodos={setTodos} />\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}